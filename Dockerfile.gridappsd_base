# This is a xenial base with python 3.5 as well
FROM sgoblin/python3.5:latest

#FROM ubuntu:xenial

WORKDIR /gridappsd

RUN apt-get update \
    && apt-get install -y \
       wget \
       git \
       automake \
       autoconf \
       make \
       g++ \
       gcc \
       libtool \
       ca-certificates \
       openssl \
       # These two for activemq \       
       libaprutil1-dev \
       mysql-client \
       python-dev \ 
       python-pip \
       sudo \
       vim \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /var/cache/apt/archives/*

ENV GRIDAPPSD=/gridappsd
ENV FNCS_INSTALL=${GRIDAPPSD}
ENV GLD_INSTALL=${GRIDAPPSD}
ENV CZMQ_VERSION 3.0.2
ENV ZMQ_VERSION 4.0.2
ENV TEMP_DIR=/tmp/source

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${FNCS_INSTALL}/lib

ENV FNCS_LOG_FILE=yes
ENV FNCS_LOG_STDOUT=yes
ENV FNCS_LOG_TRACE=yes
ENV FNCS_LOG_LEVEL=DEBUG1

# ----------------------------------------------------
# INSTALL ZMQ and BINDINGS for c++
# ----------------------------------------------------

RUN mkdir ${TEMP_DIR} \
    && cd ${TEMP_DIR} \
    && wget http://download.zeromq.org/zeromq-${ZMQ_VERSION}.tar.gz \
    && tar -xzf zeromq-${ZMQ_VERSION}.tar.gz \
    && cd ${TEMP_DIR}/zeromq-${ZMQ_VERSION} \
    && ./configure --prefix=${FNCS_INSTALL} \
    && make \
    && make install \
    && cd /tmp \
    && /bin/rm -r ${TEMP_DIR}/zeromq-${ZMQ_VERSION} \
    && /bin/rm ${TEMP_DIR}/zeromq-${ZMQ_VERSION}.tar.gz

RUN cd ${TEMP_DIR} \
    && wget https://archive.org/download/zeromq_czmq_${CZMQ_VERSION}/czmq-${CZMQ_VERSION}.tar.gz \
    && tar -xzf czmq-${CZMQ_VERSION}.tar.gz \
    && cd ${TEMP_DIR}/czmq-${CZMQ_VERSION} \
    && ./configure --prefix=${FNCS_INSTALL} --with-libzmq=${FNCS_INSTALL} \
    && make \
    && make install \
    && cd /tmp \
    && /bin/rm -r ${TEMP_DIR}/czmq-${CZMQ_VERSION} \
    && /bin/rm ${TEMP_DIR}/czmq-${CZMQ_VERSION}.tar.gz

# ----------------------------------------------------
# INSTALL FNCS
# ----------------------------------------------------

RUN cd $TEMP_DIR \
    && git clone -b develop --single-branch https://github.com/GRIDAPPSD/fncs.git \
    && cd fncs \
    && ./configure --prefix=${FNCS_INSTALL} --with-zmq=${FNCS_INSTALL} \
    && make \
    && make install \
    && cd python \
    && python setup.py sdist \
    && pip install dist/fncs-2.0.1.tar.gz \
    && pip3 install dist/fncs-2.0.1.tar.gz \
    && cd /tmp \
    && /bin/rm -r ${TEMP_DIR}/fncs

# ----------------------------------------------------
# INSTALL Gridlab-D
# ----------------------------------------------------

RUN cd $TEMP_DIR \
    && git clone https://github.com/gridlab-d/gridlab-d.git -b develop --single-branch \
    && cd ${TEMP_DIR}/gridlab-d/third_party \
    && tar -xzf xerces-c-3.2.0.tar.gz \
    && cd ${TEMP_DIR}/gridlab-d/third_party/xerces-c-3.2.0 \
    && ./configure \
    && make \
    && make install \
    && cd ${TEMP_DIR}/gridlab-d \
    && autoreconf -if \
    && ./configure --prefix=$GLD_INSTALL --with-fncs=$FNCS_INSTALL --enable-silent-rules 'CFLAGS=-g -O0 -w' 'CXXFLAGS=-g -O0 -w' 'LDFLAGS=-g -O0 -w' \
    && make \
    && make install \
    && cd /tmp \
    && /bin/rm -r ${TEMP_DIR}/gridlab-d

ENV GLPATH=${GLD_INSTALL}/lib/gridlabd:${GLD_INSTALL}/share/gridlabd
ENV CXXFLAGS=${GLD_INSTALL}/share/gridlabd

# ----------------------------------------------------
# INSTALL Java
# ----------------------------------------------------

# auto validate license
RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \
    # update repos
    && echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main" | tee /etc/apt/sources.list.d/webupd8team-java.list \
    && echo "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main" | tee -a /etc/apt/sources.list.d/webupd8team-java.list \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 \
    && apt-get update \
    # install java
    && apt-get install oracle-java8-installer -y \
    && apt-get clean


# ----------------------------------------------------
# INSTALL Activemq c++ extensions
# ----------------------------------------------------
RUN cd ${TEMP_DIR} \
    && wget http://mirror.olnevhost.net/pub/apache/activemq/activemq-cpp/3.9.4/activemq-cpp-library-3.9.4-src.tar.gz \
    && tar -xzf activemq-cpp-library-3.9.4-src.tar.gz \
    && cd activemq-cpp-library-3.9.4 \
    && ./configure --prefix=${FNCS_INSTALL} \
    && make \
    && make install \
    && cd /tmp \
    && /bin/rm -r ${TEMP_DIR}/activemq-cpp-library-3.9.4 \
    && /bin/rm -r ${TEMP_DIR}/activemq-cpp-library-3.9.4-src.tar.gz 


ENV JAVA_HOME /usr/lib/jvm/java-8-oracle


